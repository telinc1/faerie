/*
 * Copyright (c) 2018 Telinc1
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
 * OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.telinc1.faerie.gui.main;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.telinc1.faerie.gui.main.menu.FaerieMenuBar;

import javax.swing.*;
import java.awt.*;
import java.util.ResourceBundle;

/**
 * The main Faerie editor window.
 *
 * @author Telinc1
 * @since 1.0.0
 */
public class FaerieWindow extends JFrame {
    /**
     * The resource bundle for the language strings of the main Faerie window.
     */
    public static ResourceBundle locale = ResourceBundle.getBundle("com.telinc1.faerie.locale.Main");

    /**
     * The menu bar which the window displays.
     */
    private FaerieMenuBar menuBar;

    /**
     * The main content panel of the window which houses everything in it.
     */
    private JPanel contentPanel;

    /**
     * The tabbed pane of window which provides the separate views.
     */
    private JTabbedPane tabbedPane;

    /**
     * The main tab which houses the functional sprite information.
     */
    private JPanel spritePanel;

    /**
     * The main tab which houses the display information for the sprite.
     */
    private JPanel displayPanel;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        this.$$$setupUI$$$();
    }

    /**
     * Construct an application window, including all of its inner components.
     * <p>
     * The title and sizes are automatically set.
     * <p>
     * Note that the window is not opened.
     */
    public FaerieWindow(){
        super(locale.getString("title"));
        this.setSize(700, 500);
        this.setContentPane(this.contentPanel);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        this.menuBar = new FaerieMenuBar(this);
    }

    /**
     * Returns the menu bar for the application window.
     *
     * @return an instance of {@link FaerieMenuBar} which represents the
     * menu bar
     */
    public FaerieMenuBar getMenu(){
        return this.menuBar;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$(){
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane = new JTabbedPane();
        contentPanel.add(tabbedPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        spritePanel = new JPanel();
        spritePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane.addTab(ResourceBundle.getBundle("com/telinc1/faerie/locale/Main").getString("content.sprite"), spritePanel);
        displayPanel = new JPanel();
        displayPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane.addTab(ResourceBundle.getBundle("com/telinc1/faerie/locale/Main").getString("content.display"), displayPanel);
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$(){
        return contentPanel;
    }
}
